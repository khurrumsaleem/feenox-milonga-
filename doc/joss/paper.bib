@TechReport{petsc-user-ref,
  Author = {Satish Balay and Shrirang Abhyankar and Mark~F. Adams and Steven Benson and Jed Brown
    and Peter Brune and Kris Buschelman and Emil Constantinescu and Lisandro Dalcin and Alp Dener
    and Victor Eijkhout and Jacob Faibussowitsch and William~D. Gropp and V'{a}clav Hapla and Tobin Isaac and Pierre Jolivet
    and Dmitry Karpeev and Dinesh Kaushik and Matthew~G. Knepley and Fande Kong and Scott Kruger
    and Dave~A. May and Lois Curfman McInnes and Richard Tran Mills and Lawrence Mitchell and Todd Munson
    and Jose~E. Roman and Karl Rupp and Patrick Sanan and Jason Sarich and Barry~F. Smith
    and Stefano Zampini and Hong Zhang and Hong Zhang and Junchao Zhang},
  Title = {{PETSc/TAO} Users Manual},
  Number = {ANL-21/39 - Revision 3.19},
  Doi = {10.2172/1968587},
  Institution = {Argonne National Laboratory},
  Year = {2023}
}
@InProceedings{petsc-efficient,
  Author = {Satish Balay and William D. Gropp and Lois Curfman McInnes and Barry F. Smith},
  Title = {Efficient Management of Parallelism in Object Oriented Numerical Software Libraries},
  Booktitle = {Modern Software Tools in Scientific Computing},
  Editor = {E. Arge and A. M. Bruaset and H. P. Langtangen},
  doi = {10.1007/978-1-4612-1986-6_8},
  Pages = {163--202},
  Publisher = {Birkh{\"{a}}user Press},
  Year = {1997}
}
@Article{slepc-toms,
   author = "Vicente Hernandez and Jose E. Roman and Vicente Vidal",
   title = "{SLEPc}: A Scalable and Flexible Toolkit for the Solution of Eigenvalue Problems",
   journal = "{ACM} Trans. Math. Software",
   volume = "31",
   number = "3",
   pages = "351--362",
   year = "2005",
   doi = "10.1145/1089014.1089019"
}
@TechReport{slepc-manual,
   author = "J. E. Roman and C. Campos and L. Dalcin and E. Romero and A. Tomas",
   title = "{SLEPc} Users Manual",
   number = "DSIC-II/24/02 - Revision 3.19",
   institution = "D. Sistemes Inform\`atics i Computaci\'o, Universitat Polit\`ecnica de Val\`encia",
   year = "2023"
}

@book{national1990nafems,
  title={NAFEMS: The Standard NAFEMS Benchmarks},
  author={National Agency for Finite Element Methods \& Standards (Great Britain)},
  url={https://books.google.com.ar/books?id=--qwHAAACAAJ},
  year={1990},
  publisher={NAFEMS}
}

@article{milonga-openfoam,
title = {Coupled unstructured fine-mesh neutronics and thermal-hydraulics methodology using open software: A proof-of-concept},
journal = {Annals of Nuclear Energy},
volume = {115},
pages = {173-185},
year = {2018},
issn = {0306-4549},
doi = {10.1016/j.anucene.2018.01.021},
url = {https://www.sciencedirect.com/science/article/pii/S0306454918300215},
author = {Vitor Vasconcelos and André Santos and Daniel Campolina and Germán Theler and Claubia Pereira},
keywords = {Neutronics, Thermal-hydraulics, Coupling, Multi-physics, TRIGA, FOSS, Serpent, Simulation, Software},
abstract = {The development of a fine mesh coupled neutronics/thermal-hydraulics framework mainly using free open source software is presented. The proposed contributions go in two different directions: one, is the focus on the open software approach development, a concept widely spread in many fields of knowledge but rarely explored in the nuclear engineering field; the second, is the use operating system shared memory as a fast and reliable storage area to couple the computational fluid dynamics (CFD) software OpenFOAM to the free and flexible reactor core analysis code milonga. This concept was applied to model the behavior of a TRIGA-IPR-R1 reactor fuel pin in steady-state mode. The macroscopic cross-sections for the model, a set of two-group cross-sections data, were generated using the Serpent code. The results show that this coupled system gives consistent results, encouraging system further development and its use for complex geometries simulations.}
}

@article{ufl,
author = {Aln\ae{}s, Martin S. and Logg, Anders and \O{}lgaard, Kristian B. and Rognes, Marie E. and Wells, Garth N.},
title = {Unified Form Language: A Domain-Specific Language for Weak Formulations of Partial Differential Equations},
year = {2014},
issue_date = {February 2014},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {40},
number = {2},
issn = {0098-3500},
url = {https://doi.org/10.1145/2566630},
doi = {10.1145/2566630},
abstract = {We present the Unified Form Language (UFL), which is a domain-specific language for representing weak formulations of partial differential equations with a view to numerical approximation. Features of UFL include support for variational forms and functionals, automatic differentiation of forms and expressions, arbitrary function space hierarchies for multifield problems, general differential operators and flexible tensor algebra. With these features, UFL has been used to effortlessly express finite element methods for complex systems of partial differential equations in near-mathematical notation, resulting in compact, intuitive and readable programs. We present in this work the language and its construction. An implementation of UFL is freely available as an open-source software library. The library generates abstract syntax tree representations of variational problems, which are used by other software libraries to generate concrete low-level implementations. Some application examples are presented and libraries that support UFL are highlighted.},
journal = {ACM Trans. Math. Softw.},
month = {mar},
articleno = {9},
numpages = {37},
keywords = {symbolic differentiation, functional, partial differential equation, AD, index notation, automatic functional differentiation, tensor algebra, embedded language, PDE, DSEL, DSL, mixed element, weak formulation, domain specific language, discretization, weak form, finite element method, algorithmic differentiation, FEM, einstein notation, implicit summation}
}
